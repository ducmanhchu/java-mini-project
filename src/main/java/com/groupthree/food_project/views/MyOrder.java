/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.groupthree.food_project.views;

import com.groupthree.food_project.dao.OrderDetailDAO;
import com.groupthree.food_project.dao.UsersDAO;
import com.groupthree.food_project.models.OrderDetail;
import java.util.List;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alone
 */
public class MyOrder extends javax.swing.JFrame {
    /**
     * Creates new form MyOrder
     */
    public MyOrder() {
        initComponents();
        int userId = UsersDAO.currentUser.getUserId();
        loadOrderList(userId);

        // Th√™m s·ª± ki·ªán khi ch·ªçn orderId t·ª´ ComboBox
        OrderList.addActionListener(e -> {
            String selectedOrder = (String) OrderList.getSelectedItem();
            if (selectedOrder != null) {
                int orderId = Integer.parseInt(selectedOrder);
                loadOrderDetails(orderId);
            }
        });
        if (OrderList.getItemCount() > 0) {
            int firstOrderId = Integer.parseInt(OrderList.getItemAt(0));
            loadOrderDetails(firstOrderId);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        OrderList = new javax.swing.JComboBox<>();
        status = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        total = new javax.swing.JLabel();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        OrderList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        OrderList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ƒê∆°n h√†ng", " " }));
        OrderList.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        OrderList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderListActionPerformed(evt);
            }
        });

        status.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        status.setText("Tr·∫°ng th√°i:");

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "M√≥n ƒÉn", "S·ªë l∆∞·ª£ng", "Gi√° ti·ªÅn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderTable);

        total.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        total.setText("Th√†nh ti·ªÅn:");

        CancelButton.setBackground(new java.awt.Color(0, 0, 0));
        CancelButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CancelButton.setForeground(new java.awt.Color(255, 255, 255));
        CancelButton.setText("Hu·ª∑ ƒë∆°n");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(OrderList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(status)
                .addGap(76, 76, 76))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(total)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelButton)
                .addGap(56, 56, 56))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrderList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(total)
                    .addComponent(CancelButton))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // L·∫•y orderId t·ª´ danh s√°ch
        String selectedOrder = (String) OrderList.getSelectedItem();
        if (selectedOrder == null) {
            return;
        }

        int orderId = Integer.parseInt(selectedOrder);

        // Ki·ªÉm tra tr·∫°ng th√°i ƒë∆°n h√†ng
        String orderStatus = OrderDetailDAO.getOrderStatus(orderId);

        if ("ƒê√£ h·ªßy".equals(orderStatus)) {
            javax.swing.JOptionPane.showMessageDialog(this, "ƒê∆°n h√†ng ƒë√£ b·ªã h·ªßy tr∆∞·ªõc ƒë√≥!", "Th√¥ng b√°o",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // X√°c nh·∫≠n t·ª´ ng∆∞·ªùi d√πng
        int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒë∆°n h√†ng n√†y?",
                "X√°c nh·∫≠n h·ªßy", javax.swing.JOptionPane.YES_NO_OPTION);
        if (confirm != javax.swing.JOptionPane.YES_OPTION) {
            return;
        }

        // C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng th√†nh "ƒê√£ h·ªßy"
        boolean success = OrderDetailDAO.cancelOrder(orderId);

        if (success) {
            javax.swing.JOptionPane.showMessageDialog(this, "H·ªßy ƒë∆°n h√†ng th√†nh c√¥ng!", "Th√†nh c√¥ng",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // üü¢ C·∫≠p nh·∫≠t tr·∫°ng th√°i tr√™n giao di·ªán
            status.setText("Tr·∫°ng th√°i: ƒê√£ h·ªßy");

            // üü¢ C·∫≠p nh·∫≠t t·ªïng ti·ªÅn v·ªÅ 0
            total.setText("Th√†nh ti·ªÅn: 0 VND");

            // üü¢ X√≥a d·ªØ li·ªáu trong b·∫£ng
            DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
            model.setRowCount(0);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "H·ªßy ƒë∆°n h√†ng th·∫•t b·∫°i!", "L·ªói",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    // GEN-LAST:event_CancelButtonActionPerformed

    private void OrderListActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_OrderListActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_OrderListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyOrder().setVisible(true);
            }
        });
    }
    public void refreshOrderList() {
        int userId = UsersDAO.currentUser.getUserId(); // L·∫•y ID ng∆∞·ªùi d√πng hi·ªán t·∫°i
        loadOrderList(userId); // T·∫£i l·∫°i danh s√°ch ƒë∆°n h√†ng
    }

    private void loadOrderDetails(int orderId) {
        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0); // X√≥a d·ªØ li·ªáu c≈©
        double sum = 0;

        List<OrderDetail> orderDetails = OrderDetailDAO.getOrderDetailsByOrderId(orderId);
        for (OrderDetail detail : orderDetails) {
            model.addRow(new Object[] {
                    detail.getProductName(), // Hi·ªÉn th·ªã t√™n m√≥n ƒÉn
                    detail.getQuantity(), // Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng
                    detail.getUnitPrice() // Hi·ªÉn th·ªã gi√° ti·ªÅn
            });
            sum+=detail.getQuantity()*detail.getUnitPrice();
        }
        total.setText("T·ªïng ti·ªÅn " + sum);
        status.setText("Tr·∫°ng th√°i "+OrderDetailDAO.getOrderStatus(orderId));
    }

    private void loadOrderList(int userId) {
        OrderList.removeAllItems(); // X√≥a danh s√°ch c≈©
        List<Integer> orderIds = OrderDetailDAO.getOrderIds(userId); // L·∫•y danh s√°ch orderId c·ªßa user

        for (Integer orderId : orderIds) {
            OrderList.addItem(String.valueOf(orderId)); // Th√™m orderId v√†o ComboBox
        }

        // N·∫øu c√≥ √≠t nh·∫•t m·ªôt ƒë∆°n h√†ng, hi·ªÉn th·ªã chi ti·∫øt ƒë∆°n ƒë·∫ßu ti√™n
        if (OrderList.getItemCount() > 0) {
            loadOrderDetails(Integer.parseInt(OrderList.getItemAt(0)));
        }

        // Th√™m s·ª± ki·ªán khi ch·ªçn order kh√°c
        OrderList.addActionListener(e -> {
            String selectedOrder = (String) OrderList.getSelectedItem();
            if (selectedOrder != null) {
                int orderId = Integer.parseInt(selectedOrder); // ƒê√∫ng c√°ch
                loadOrderDetails(orderId);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JComboBox<String> OrderList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderTable;
    private javax.swing.JLabel status;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
